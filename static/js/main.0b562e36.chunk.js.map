{"version":3,"sources":["components/Footer.js","components/pages/Home.js","components/Navbar.js","utils/ScrollToTop.js","App.js","serviceWorker.js","index.js"],"names":["React","memo","props","t","useTranslation","className","style","animationDelay","href","target","rel","justifyContent","Home","Fragment","Helmet","name","content","activeNavIcon","path","stroke","window","location","pathname","Expand","expand","pages","setExpand","expandElement","useRef","useEffectOnce","anime","targets","current","translateX","easing","duration","ref","onMouseLeave","map","page","i","showInNavbar","to","pageLink","key","onClick","animationDelayForNavbar","displayName","Navbar","darkMode","setDarkMode","useState","useLocalStorage","setIsThemeSet","useLockBodyScroll","windowSize","useWindowSize","prevMode","color","onMouseEnter","innerWidth","strokeDashoffset","setDashoffset","delay","el","direction","loop","width","ScrollToTop","useLocation","useEffect","scrollTo","Achievements","lazy","Projects","Events","About","schemaMarkup","alternateName","url","image","App","view","isThemeSet","matchMedia","matches","document","querySelector","classList","add","remove","type","JSON","stringify","fallback","render","index","exact","match","params","stateCode","Boolean","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0b562e36.chunk.js","sourcesContent":["import React from \"react\";\nimport * as Icon from \"react-feather\";\nimport { useTranslation } from \"react-i18next\";\n\nfunction Footer(props) {\n  const { t } = useTranslation();\n\n  return (\n    <footer className=\"fadeInUp\" style={{ animationDelay: \"2s\" }}>\n      <h5>{t(\"Computer Science Society\")}</h5>\n\n      <div className=\"link\">\n        <a\n          href=\"https://github.com/PECACM\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          PECACM\n        </a>\n      </div>\n\n      <a\n        href=\"https://github.com/PECACM/pecacm_frontend\"\n        className=\"button github\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Icon.GitHub />\n        <span>Open Sourced on GitHub</span>\n      </a>\n\n      <a\n        href=\"https://www.facebook.com/pecacm/\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"button facebook\"\n        style={{ justifyContent: \"center\" }}\n      >\n        <Icon.Facebook />\n        <span>View updates on Facebook</span>\n      </a>\n\n      <a\n        href=\"https://www.instagram.com/pecacm/\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"button instagram\"\n        style={{ justifyContent: \"center\" }}\n      >\n        <Icon.Instagram />\n        <span>View updates on Instagram</span>\n      </a>\n\n      <a\n        href=\"https://twitter.com/ACM_CSS_PEC\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"button twitter\"\n        style={{ justifyContent: \"center\" }}\n      >\n        <Icon.Twitter />\n        <span>View updates on Twitter</span>\n      </a>\n\n      <a\n        href=\"https://www.linkedin.com/in/pecacm/\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"button linkedin\"\n        style={{ justifyContent: \"center\" }}\n      >\n        <Icon.Linkedin />\n        <span>View updates on LinkedIn</span>\n      </a>\n\n      <a\n        href=\"mailto:acmcss@pec.edu.in?Subject=Contact%20PEC%20ACM%20Student%20Chapter\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"button mail\"\n        style={{ justifyContent: \"center\" }}\n      >\n        <Icon.Mail />\n        <span>Contact us</span>\n      </a>\n    </footer>\n  );\n}\n\nexport default React.memo(Footer);\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport Footer from \"../Footer\";\n\nexport default function Home() {\n  return (\n    <React.Fragment>\n      <div className=\"Home\">\n        <Helmet>\n          <title>PEC ACM Society</title>\n          <meta name=\"title\" content=\"Computer Science Society\" />\n        </Helmet>\n      </div>\n      <Footer/>\n    </React.Fragment>\n  );\n}\n","import React, { useState, useRef } from \"react\";\nimport anime from \"animejs\";\nimport * as Icon from \"react-feather\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  useEffectOnce,\n  useLockBodyScroll,\n  useWindowSize,\n  useLocalStorage,\n} from \"react-use\";\n\nconst navLinkProps = (path, animationDelay) => ({\n  className: `fadeInUp ${window.location.pathname === path ? \"focused\" : \"\"}`,\n  style: {\n    animationDelay: `${animationDelay}s`,\n  },\n});\n\nconst activeNavIcon = (path) => ({\n  style: {\n    stroke: window.location.pathname === path ? \"#4c75f2\" : \"\",\n  },\n});\n\nfunction Navbar({ pages, darkMode, setDarkMode }) {\n  const [expand, setExpand] = useState(false);\n  const [isThemeSet, setIsThemeSet] = useLocalStorage(\"isThemeSet\", false);\n\n  useLockBodyScroll(expand);\n  const windowSize = useWindowSize();\n\n  return (\n    <div className=\"Navbar\">\n      <div\n        className=\"navbar-left\"\n        onClick={() => {\n          setDarkMode((prevMode) => !prevMode);\n          setIsThemeSet(true);\n        }}\n      >\n        {darkMode ? <Icon.Sun color={\"#ffc107\"} /> : <Icon.Moon />}\n      </div>\n      <div className=\"navbar-middle\">\n        <Link\n          to=\"/\"\n          onClick={() => {\n            setExpand(false);\n          }}\n        >\n          PECACM <span>SOCIETY</span>\n        </Link>\n      </div>\n      <div\n        className=\"navbar-right\"\n        onClick={() => {\n          setExpand(!expand);\n        }}\n        onMouseEnter={() => {\n          if (window.innerWidth > 769) {\n            setExpand(true);\n            anime({\n              targets: \".navbar-right path\",\n              strokeDashoffset: [anime.setDashoffset, 0],\n              easing: \"easeInOutSine\",\n              duration: 250,\n              delay: function (el, i) {\n                return i * 250;\n              },\n              direction: \"alternate\",\n              loop: false,\n            });\n          }\n        }}\n      >\n        {windowSize.width < 769 && <span>{expand ? \"Close\" : \"Menu\"}</span>}\n        {windowSize.width > 769 && (\n          <React.Fragment>\n            <span>\n              <Link to=\"/\">\n                <Icon.Home {...activeNavIcon(\"/\")} />\n              </Link>\n            </span>\n            <span>\n              <Link to=\"/achievements\">\n                <Icon.Award {...activeNavIcon(\"/achievements\")} />\n              </Link>\n            </span>\n            <span>\n              <Link to=\"/projects\">\n                <Icon.Clipboard {...activeNavIcon(\"/projects\")} />\n              </Link>\n            </span>\n            <span>\n              <Link to=\"/events\">\n                <Icon.Calendar {...activeNavIcon(\"/events\")} />\n              </Link>\n            </span>\n            <span>\n              <Link to=\"/about\">\n                <Icon.HelpCircle {...activeNavIcon(\"/about\")} />\n              </Link>\n            </span>\n          </React.Fragment>\n        )}\n      </div>\n      {expand && <Expand expand={expand} pages={pages} setExpand={setExpand} />}\n    </div>\n  );\n}\n\nfunction Expand({ expand, pages, setExpand }) {\n  const expandElement = useRef(null);\n  const { t } = useTranslation();\n\n  useEffectOnce(() => {\n    anime({\n      targets: expandElement.current,\n      translateX: \"10rem\",\n      easing: \"easeOutExpo\",\n      duration: 250,\n    });\n  });\n\n  return (\n    <div\n      className=\"expand\"\n      ref={expandElement}\n      onMouseLeave={() => {\n        setExpand(false);\n      }}\n    >\n      {pages.map((page, i) => {\n        if (page.showInNavbar === true) {\n          return (\n            <Link\n              to={page.pageLink}\n              key={i}\n              onClick={() => {\n                setExpand(false);\n              }}\n            >\n              <span\n                {...navLinkProps(page.pageLink, page.animationDelayForNavbar)}\n              >\n                {t(page.displayName)}\n              </span>\n            </Link>\n          );\n        }\n        return null;\n      })}\n\n      <div className=\"expand-bottom fadeInUp\" style={{ animationDelay: \"1s\" }}>\n        <h5>{t(\"An opensource initiative.\")}</h5>\n      </div>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import React, { Suspense, lazy } from \"react\";\nimport Home from \"./components/pages/Home\";\nimport Navbar from \"./components/Navbar\";\nimport ScrollToTop from \"./utils/ScrollToTop\";\nimport { Helmet } from \"react-helmet\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { useLocalStorage, useEffectOnce } from \"react-use\";\nimport \"./App.scss\";\n\nconst Achievements = lazy(() => import(\"./components/pages/Achievements\"));\nconst Projects = lazy(() => import(\"./components/pages/Projects\"));\nconst Events = lazy(() => import(\"./components/pages/Events\"));\nconst About = lazy(() => import(\"./components/pages/About\"));\n\nconst schemaMarkup = {\n  \"@context\": \"http://schema.org/\",\n  \"@type\": \"NGO\",\n  name: \"PEC ACM Society\",\n  alternateName: \"Computer Science Society\",\n  url: \"https://www.pec.ac.in/\",\n  image: \"https://www.pec.ac.in/thumbnail.png\",\n};\n\nfunction App() {\n  const { t } = useTranslation();\n\n  const pages = [\n    {\n      pageLink: \"/\",\n      view: Home,\n      displayName: \"Home\",\n      animationDelayForNavbar: 0.2,\n      showInNavbar: true,\n    },\n    {\n      pageLink: \"/achievements\",\n      view: Achievements,\n      displayName: t(\"Achievements & Awards\"),\n      animationDelayForNavbar: 0.3,\n      showInNavbar: true,\n    },\n    {\n      pageLink: \"/projects\",\n      view: Projects,\n      displayName: t(\"Projects\"),\n      animationDelayForNavbar: 0.4,\n      showInNavbar: true,\n    },\n    {\n      pageLink: \"/events\",\n      view: Events,\n      displayName: t(\"Events\"),\n      animationDelayForNavbar: 0.5,\n      showInNavbar: true,\n    },\n    {\n      pageLink: \"/about\",\n      view: About,\n      displayName: t(\"About\"),\n      animationDelayForNavbar: 0.6,\n      showInNavbar: true,\n    },\n  ];\n\n  const [darkMode, setDarkMode] = useLocalStorage(\"darkMode\", false);\n  const [isThemeSet] = useLocalStorage(\"isThemeSet\", false);\n\n  useEffectOnce(() => {\n    if (\n      window.matchMedia &&\n      window.matchMedia(\"(prefers-color-scheme: dark)\").matches &&\n      !isThemeSet\n    ) {\n      setDarkMode(true);\n    } else if (\n      window.matchMedia &&\n      !window.matchMedia(\"(prefers-color-scheme: dark)\").matches &&\n      !isThemeSet\n    ) {\n      setDarkMode(false);\n    }\n  });\n\n  React.useEffect(() => {\n    if (darkMode) {\n      document.querySelector(\"body\").classList.add(\"dark-mode\");\n    } else {\n      document.querySelector(\"body\").classList.remove(\"dark-mode\");\n    }\n  }, [darkMode]);\n\n  return (\n    <div className=\"App\">\n      <Helmet>\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaMarkup)}\n        </script>\n      </Helmet>\n\n      <Router>\n        <ScrollToTop />\n        <Suspense fallback={<div className=\"lazy\"></div>}>\n          <Route\n            render={({ location }) => (\n              <div className=\"Almighty-Router\">\n                <Navbar\n                  pages={pages}\n                  darkMode={darkMode}\n                  setDarkMode={setDarkMode}\n                />\n                <Switch location={location}>\n                  {pages.map((page, index) => {\n                    return (\n                      <Route\n                        exact\n                        path={page.pageLink}\n                        render={({ match }) => (\n                          <page.view key={match.params.stateCode || index} />\n                        )}\n                        key={index}\n                      />\n                    );\n                  })}\n                  <Redirect to=\"/\" />\n                </Switch>\n              </div>\n            )}\n          />\n        </Suspense>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}